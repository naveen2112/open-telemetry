# Generated by Django 4.1.3 on 2023-04-04 07:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Designations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("type", models.CharField(blank=True, max_length=255, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "designations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Teams",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("type", models.CharField(blank=True, max_length=255, null=True)),
                ("started_at", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "teams",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Users",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "employee_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("email", models.CharField(max_length=255, unique=True)),
                ("email_verified_at", models.DateTimeField(blank=True, null=True)),
                ("password", models.CharField(blank=True, max_length=255, null=True)),
                ("username", models.CharField(blank=True, max_length=255, null=True)),
                ("name", models.CharField(max_length=255)),
                ("is_employed", models.BooleanField(blank=True, null=True)),
                (
                    "remember_token",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("status", models.CharField(max_length=255)),
                ("branch_id", models.BigIntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("team_owner", models.BooleanField(blank=True, null=True)),
                ("first_name", models.CharField(blank=True, max_length=255, null=True)),
                ("last_name", models.CharField(blank=True, max_length=255, null=True)),
                ("is_saturday_working", models.BooleanField()),
            ],
            options={
                "db_table": "users",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Timeline",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                ("name", models.CharField(max_length=255)),
                ("is_active", models.BooleanField(default=False)),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="hubble.teams"
                    ),
                ),
            ],
            options={
                "db_table": "timeline",
            },
        ),
        migrations.CreateModel(
            name="TimelineTask",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(null=True)),
                ("name", models.CharField(max_length=255)),
                ("days", models.IntegerField()),
                (
                    "present_type",
                    models.CharField(
                        choices=[("Remote", "Remote"), ("In-Person", "In-Person")],
                        default="Remote",
                        max_length=255,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("None", "None"),
                            ("Weekly Task", "Weekly Task"),
                            ("Realtime Project", "Realtime Project"),
                        ],
                        default="None",
                        max_length=255,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="hubble.users"
                    ),
                ),
                (
                    "timeline_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="hubble.timeline",
                    ),
                ),
            ],
            options={
                "db_table": "timeline_task",
            },
        ),
    ]
